library("ggplot2")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="F:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_hnp248", "orcl_hnp248"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
population <- dbGetQuery(jdbcConnection, "select * from POPULATION")
diamonds <- dbGetQuery(jdbcConnection, "select * from diamonds")
populationByState <- dbGetQuery(jdbcConnection, "select s.STATE_NAME, sum(p.CENSUS2010POP)
from POPULATION p
INNER JOIN STATE s on p.STATE_ID = s.STATE_ID
group by s.STATE_NAME
order by s.STATE_NAME asc")
populationByStateRace <- dbGetQuery(jdbcConnection, "select s.STATE_NAME, r.RACE_NAME, sum(p.CENSUS2010POP)
from POPULATION p
INNER JOIN STATE s on p.STATE_ID = s.STATE_ID
INNER JOIN RACE r on  p.RACE_ID = r.RACE_ID
group by s.STATE_NAME, r.RACE_NAME
order by s.STATE_NAME asc")
dbDisconnect(jdbcConnection)
}
#head(population)
#head(diamonds)'
head(populationByState)
ggplot(data = diamonds) + geom_histogram(aes(x = s.STATE_NAME))
ggplot(data = diamonds) + geom_histogram(aes(x = STATE_NAME))
ggplot(data = diamonds) + geom_histogram(aes(x = STATE))
ggplot(data = PopulationByState) + geom_histogram(aes(x = s.STATE_NAME))
ggplot(data = populationByState) + geom_histogram(aes(x = s.STATE_NAME))
ggplot(data = populationByState) + geom_histogram(aes(x = STATE))
ggplot(data = populationByState) + geom_histogram(aes(x = State))
head(diamonds)
library("ggplot2")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="F:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_hnp248", "orcl_hnp248"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
population <- dbGetQuery(jdbcConnection, "select * from POPULATION")
diamonds <- dbGetQuery(jdbcConnection, "select * from diamonds")
popState <- dbGetQuery(jdbcConnection, "select s.STATE_NAME as State, sum(p.CENSUS2010POP) as Population
from POPULATION p
INNER JOIN STATE s on p.STATE_ID = s.STATE_ID
group by s.STATE_NAME
order by s.STATE_NAME asc")
popStateRace <- dbGetQuery(jdbcConnection, "select s.STATE_NAME, r.RACE_NAME, sum(p.CENSUS2010POP)
from POPULATION p
INNER JOIN STATE s on p.STATE_ID = s.STATE_ID
INNER JOIN RACE r on  p.RACE_ID = r.RACE_ID
group by s.STATE_NAME, r.RACE_NAME
order by s.STATE_NAME asc")
dbDisconnect(jdbcConnection)
}
