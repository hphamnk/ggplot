ggplot(ageTX, aes(x = AGE, y = POPULATION)) + ggtitle("Total Population by Age in TX") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma)
#map Hispanic Population by State
mapHispanicState <- subset(popAll, SEX =='Total' & ORIGIN =='Hispanic')
mapHispanicState <- ddply(mapHispanicState, 'STATE', numcolwise(sum))
colnames(mapHispanicState) <- c('region', 'value')
choroplethr(mapHispanicState, "state", title = 'Hispanic Population by State', num_buckets=4)
racePop <- subset(popAll, SEX == 'Total'& ORIGIN =='Total')
racePop <- ddply(racePop, 'RACE', numcolwise(sum))
racePop$RACE2 <- reorder(racePop$RACE, racePop$POPULATION)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=cond), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE, color = factor(RACE))) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE, col = rainbow(RACE))) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE, col = rainbow(RACE))) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE, col = false)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
?rainbow
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION), col = rainbow(RACE2), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION), col = rainbow(POPULATION), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION , col = rainbow(RACE2)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION , col = rainbow(POULATION)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
library("RColorBrewer", lib.loc="F:/Program Files/R/R-3.0.3/library")
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION , col = rainbow(POULATION)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE) + scale_fill_brewer(palette="Set1")
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION , col = rainbow(POULATION)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE) + scale_fill_brewer(palette="Set1")
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=palette="Set1" , col = rainbow(POULATION)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, palette="Set1" , col = rainbow(POULATION)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, palette="Set2" , col = rainbow(POULATION)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION , col = rainbow(POULATION)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE) + scale_fill_brewer(palette="Set1")
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION , col = rainbow(POULATION)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION , col = rainbow(POULATION)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE) + scale_fill_brewer()
View(popAll)
color = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
ggplot(racePop, aes(y = POPULATION, x = RACE, factor(RACE), fill = factor(RACE))) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE, factor(RACE), fill = factor(RACE))) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE) +scale_fill_brewer(palette="Set1")
ggplot(racePop, aes(y = POPULATION, x = RACE, factor(RACE), fill = factor(RACE), fill=getPalette(colourCount) )) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill=POPULATION), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE, factor(RACE) )) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE), fill=getPalette(colourCount)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE, factor(RACE) )) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE), fill=getPalette(color)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
colorRace = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(11, "Spectral"))
ggplot(racePop, aes(y = POPULATION, x = RACE, factor(RACE) )) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE), fill=getPalette(color)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
colorRace = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(11, "Spectral"))
ggplot(racePop, aes(y = POPULATION, x = RACE, factor(RACE) )) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE), fill=getPalette(color)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
colorRace = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(11, "Spectral"))
ggplot(racePop, aes(y = POPULATION, x = RACE, factor(RACE) )) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE), fill=getPalette(colorRace)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
colorRace = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(11, "Spectral"))
ggplot(racePop, aes(y = POPULATION, x = RACE, factor(RACE) )) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE), fill=getPalette(colorRace)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
colorRace = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(11, "Spectral"))
ggplot(racePop, aes(y = POPULATION, x = RACE, factor(RACE) )) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE), fill=rainbow(RACE), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
colorRace = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(11, "Spectral"))
ggplot(racePop, aes(y = POPULATION, x = RACE, factor(RACE) )) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2), fill=getPalette(colorRace)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
colorRace = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(5, "Spectral"))
ggplot(racePop, aes(y = POPULATION, x = RACE, factor(RACE) )) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2), fill=getPalette(colorRace)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
colorRace = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(colorRace, "Spectral"))
ggplot(racePop, aes(y = POPULATION, x = RACE, factor(RACE) )) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2), fill=getPalette(colorRace)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
colorRace = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(colorRace, "Spectral"))
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2), fill=getPalette(colorRace)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
racePop <- subset(popAll, SEX == 'Total'& ORIGIN =='Total')
racePop <- ddply(racePop, 'RACE', numcolwise(sum))
racePop$RACE2 <- reorder(racePop$RACE, racePop$POPULATION)
colorRace = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(colorRace, "Spectral"))
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2), fill=getPalette(colorRace)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
statePop <- totalPopState
statePop$STATE2 <- reorder(statePop$STATE, statePop$POPULATION)
colorState = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(colorState, "Spectral"))
ggplot(statePop, aes(y = POPULATION, x = STATE)) + coord_flip() + ggtitle("Population by State") + scale_y_continuous(labels = comma) + geom_bar(aes(x=STATE2, fill=factor(STATE2), fill=getPalette(colorState)), color = "black", data = statePop , stat = "identity") + guides(fill=FALSE)
statePop <- totalPopState
statePop$STATE2 <- reorder(statePop$STATE, statePop$POPULATION)
colorState = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(9, "Spectral"))
ggplot(statePop, aes(y = POPULATION, x = STATE)) + coord_flip() + ggtitle("Population by State") + scale_y_continuous(labels = comma) + geom_bar(aes(x=STATE2, fill=factor(STATE2), fill=getPalette(colorState)), color = "black", data = statePop , stat = "identity") + guides(fill=FALSE)
statePop <- totalPopState
statePop$STATE2 <- reorder(statePop$STATE, statePop$POPULATION)
ggplot(statePop, aes(y = POPULATION, x = STATE)) + coord_flip() + ggtitle("Population by State") + scale_y_continuous(labels = comma) + geom_bar(aes(x=STATE2, fill=POPULATION), color = "black", data = statePop , stat = "identity") + guides(fill=FALSE)
racePop <- subset(popAll, SEX == 'Total'& ORIGIN =='Total')
racePop <- ddply(racePop, 'RACE', numcolwise(sum))
racePop$RACE2 <- reorder(racePop$RACE, racePop$POPULATION)
colorRace = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(colorRace, "Spectral"))
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2), fill=getPalette(colorRace)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
racePop <- subset(popAll, SEX == 'Total'& ORIGIN =='Total')
racePop <- ddply(racePop, 'RACE', numcolwise(sum))
racePop$RACE2 <- reorder(racePop$RACE, racePop$POPULATION)
colorRace = length(unique(racePop$RACE))
getPalette = colorRampPalette(brewer.pal(colorRace, "Set2"))
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2), fill=getPalette(colorRace)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE) + scale_fill_brewer(palette="Set2")
racePop <- subset(popAll, SEX == 'Total'& ORIGIN =='Total')
racePop <- ddply(racePop, 'RACE', numcolwise(sum))
racePop$RACE2 <- reorder(racePop$RACE, racePop$POPULATION)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE) + scale_fill_brewer(palette="Set2")
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE) + scale_fill_brewer(palette="Spectral")
ggplot(statePop, aes(y = POPULATION, x = STATE)) + coord_flip() + ggtitle("Population by State") + scale_y_continuous(labels = comma) + geom_bar(aes(x=STATE2, fill=factor(STAE2)), color = "black", data = statePop , stat = "identity") + guides(fill=FALSE) + ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE) + scale_fill_brewer(palette="Spectral")
ggplot(statePop, aes(y = POPULATION, x = STATE)) + coord_flip() + ggtitle("Population by State") + scale_y_continuous(labels = comma) + geom_bar(aes(x=STATE2, fill=factor(STATE2)), color = "black", data = statePop , stat = "identity") + guides(fill=FALSE)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE) + scale_fill_brewer(palette="Spectral")
ggplot(ageCA, aes(x = AGE, y = POPULATION, fill = factor(AGE))) + ggtitle("Total Population by Age in CA") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma)
ggplot(ageTX, aes(x = AGE, y = POPULATION, fill = factor(AGE))) + ggtitle("Total Population by Age in TX") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma)
ggplot(ageCA, aes(x = AGE, y = POPULATION, fill = factor(AGE))) + ggtitle("Total Population by Age in CA") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
racePop <- subset(popAll, SEX == 'Total'& ORIGIN =='Total')
racePop <- ddply(racePop, 'RACE', numcolwise(sum))
racePop$RACE2 <- reorder(racePop$RACE, racePop$POPULATION)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE) + scale_fill_brewer(palette="Spectral")
ggplot(ageTX, aes(x = AGE, y = POPULATION, fill = factor(AGE))) + ggtitle("Total Population by Age in TX") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
ggplot(ageTX, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age in TX") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
ggplot(statePop, aes(y = POPULATION, x = STATE)) + coord_flip() + ggtitle("Population by State") + scale_y_continuous(labels = comma) + geom_bar(aes(x=STATE2, fill=factor(POPULATION)), color = "black", data = statePop , stat = "identity") + guides(fill=FALSE)
ggplot(ageTX, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age in TX") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
ggplot(ageCA, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age in CA") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
choroplethr(mapHispanicState, "state", title = 'Hispanic Population by State', num_buckets=4) + scale_fill_brewer(palette=1)
choroplethr(mapHispanicState, "state", title = 'Hispanic Population by State', num_buckets=4) + scale_fill_brewer(palette=2)
choroplethr(mapBlackState, "state", title = 'Black or African American Population by State', num_buckets=4)  + scale_fill_brewer(palette=6)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=5)
choroplethr(mapAsianState, "state", title = 'Asian Population by State', num_buckets=4)  + scale_fill_brewer(palette=4)
choroplethr(mapHawaiiState, "state", title = 'Native Hawaiian and Other Pacific Islander Population by State', num_buckets=4)  + scale_fill_brewer(palette=3)
choroplethr(mapHispanicState, "state", title = 'Hispanic Population by State', num_buckets=4) + scale_fill_brewer(palette=2)
choroplethr(mapWhiteState, "state", title = 'White Population by State', num_buckets=4)
choroplethr(mapBlackState, "state", title = 'Black or African American Population by State', num_buckets=4)  + scale_fill_brewer(palette=white)
?color
choroplethr(mapBlackState, "state", title = 'Black or African American Population by State', num_buckets=4)  + scale_fill_brewer(palette=8)
choroplethr(mapWhiteState, "state", title = 'White Population by State', num_buckets=4) + scale_fill_brewer(palette=10)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=5)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=15)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=25)
?brewer.pal
brewer.pal
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=17)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=16)
choroplethr(mapAsianState, "state", title = 'Asian Population by State', num_buckets=4)  + scale_fill_brewer(palette=4)
choroplethr(mapWhiteState, "state", title = 'White Population by State', num_buckets=4) + scale_fill_brewer(palette=10)
choroplethr(mapBlackState, "state", title = 'Black or African American Population by State', num_buckets=4)  + scale_fill_brewer(palette=8)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=15)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=14)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=111)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=11)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=10)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=9)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=7)
choroplethr(mapBlackState, "state", title = 'Black or African American Population by State', num_buckets=4)  + scale_fill_brewer(palette=8)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=15)
choroplethr(mapAsianState, "state", title = 'Asian Population by State', num_buckets=4)  + scale_fill_brewer(palette=4)
choroplethr(mapHawaiiState, "state", title = 'Native Hawaiian and Other Pacific Islander Population by State', num_buckets=4)  + scale_fill_brewer(palette=3)
choroplethr(mapHispanicState, "state", title = 'Hispanic Population by State', num_buckets=4) + scale_fill_brewer(palette=2)
choroplethr(mapHispanicState, "state", title = 'Hispanic Population by State', num_buckets=4) + scale_fill_brewer(palette=19)
choroplethr(mapHispanicState, "state", title = 'Hispanic Population by State', num_buckets=4) + scale_fill_brewer(palette=18)
choroplethr(mapHispanicState, "state", title = 'Hispanic Population by State', num_buckets=4) + scale_fill_brewer(palette=18)
choroplethr(mapHawaiiState, "state", title = 'Native Hawaiian and Other Pacific Islander Population by State', num_buckets=4)  + scale_fill_brewer(palette=3)
choroplethr(mapHawaiiState, "state", title = 'Native Hawaiian and Other Pacific Islander Population by State', num_buckets=4)  + scale_fill_brewer(palette=3)
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=15)
choroplethr(mapAsianState, "state", title = 'Asian Population by State', num_buckets=4)  + scale_fill_brewer(palette=4)
choroplethr(mapBlackState, "state", title = 'Black or African American Population by State', num_buckets=4)  + scale_fill_brewer(palette=8)
choroplethr(mapWhiteState, "state", title = 'White Population by State', num_buckets=4) + scale_fill_brewer(palette=10)
choroplethr(mapHispanicState, "state", title = 'Hispanic Population by State', num_buckets=4) + scale_fill_brewer(palette=18)
choroplethr(maleRatio, "state", title = 'Male Ratio by State')
ageCA <- subset(popAll, STATE =='CA' & SEX =='Total' & ORIGIN =='Total')
View(ageCA)
ageCA <- ddply(ageCA, 'AGE', numcolwise(sum))
View(ageCA)
library("knitr", lib.loc="F:/Program Files/R/R-3.0.3/library")
install.packages("markdown")
library("markdown", lib.loc="F:/Program Files/R/R-3.0.3/library")
devtools::install_github("rstudio/rmarkdown")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
maleRatio <- subset(popAll, SEX == 'Male' & ORIGIN =='Total')
maleRatio <- ddply(maleRatio, 'STATE', numcolwise(sum))
for (i in 1:51)
{
maleRatio[i,"POPULATION"] <- round(maleRatio[i,"POPULATION"] / totalPopState[i,"POPULATION"], digits = 3 )
}
colnames(maleRatio) <- c("region", 'value')
choroplethr(maleRatio, "state", title = 'Male Ratio by State')
library("ggplot2")
options(java.parameters="-Xmx4g")
library(rJava)
library(RJDBC)
library(scales)
library(maps)
library(ggmap)
library(plyr)
library(choroplethr)
library(RColorBrewer)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_hnp248", "orcl_hnp248"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
#population with state, race, age, sex
popAll <- dbGetQuery(jdbcConnection, "select s.STATE_NAME as State, r.RACE_NAME as Race, o.ORIGIN_NAME as Origin, p.AGE as Age, s2.SEX_NAME as Sex, sum(p.CENSUS2010POP) as Population
from POPULATION p
INNER JOIN STATE s on p.STATE_ID = s.STATE_ID
INNER JOIN RACE r on  p.RACE_ID = r.RACE_ID
INNER JOIN SEX s2 on p.SEX_ID = s2.SEX_ID
INNER JOIN ORIGIN o on p.ORIGIN_ID = o.ORIGIN_ID
group by s.STATE_NAME, r.RACE_NAME, o.ORIGIN_NAME, p.AGE, s2.SEX_NAME
order by s.STATE_NAME, r.RACE_NAME, p.AGE, s2.SEX_NAME asc")
dbDisconnect(jdbcConnection)
}
totalPopState <- subset(popAll, SEX == 'Total'& ORIGIN =='Total')
totalPopState <- ddply(totalPopState, 'STATE', numcolwise(sum))
# state chart
statePop <- totalPopState
statePop$STATE2 <- reorder(statePop$STATE, statePop$POPULATION)
ggplot(statePop, aes(y = POPULATION, x = STATE)) + coord_flip() + ggtitle("Population by State") + scale_y_continuous(labels = comma) + geom_bar(aes(x=STATE2, fill=factor(POPULATION)), color = "black", data = statePop , stat = "identity") + guides(fill=FALSE)
racePop <- subset(popAll, SEX == 'Total'& ORIGIN =='Total')
racePop <- ddply(racePop, 'RACE', numcolwise(sum))
racePop$RACE2 <- reorder(racePop$RACE, racePop$POPULATION)
ggplot(racePop, aes(y = POPULATION, x = RACE)) + coord_flip() + ggtitle("Population by Race") + scale_y_continuous(labels = comma) + geom_bar(aes(x=RACE2, fill = factor(RACE2)), color = "black", data = racePop , stat = "identity") + guides(fill=FALSE) + scale_fill_brewer(palette="Spectral")
mapPopState <- totalPopState
colnames(mapPopState) <- c("region", 'value')
choroplethr(mapPopState, "state", title = 'Population by State')
mapWhiteState <- subset(popAll, RACE =='White' & SEX =='Total' & ORIGIN =='Total')
mapWhiteState <- ddply(mapWhiteState, 'STATE', numcolwise(sum))
colnames(mapWhiteState) <- c('region', 'value')
choroplethr(mapWhiteState, "state", title = 'White Population by State', num_buckets=4) + scale_fill_brewer(palette=10)
mapBlackState <- subset(popAll, RACE =='Black or African American' & SEX =='Total' & ORIGIN =='Total')
mapBlackState <- ddply(mapBlackState, 'STATE', numcolwise(sum))
colnames(mapBlackState) <- c('region', 'value')
choroplethr(mapBlackState, "state", title = 'Black or African American Population by State', num_buckets=4)  + scale_fill_brewer(palette=8)
mapBlackState <- subset(popAll, RACE =='Black or African American' & SEX =='Total' & ORIGIN =='Total')
mapBlackState <- ddply(mapBlackState, 'STATE', numcolwise(sum))
colnames(mapBlackState) <- c('region', 'value')
choroplethr(mapBlackState, "state", title = 'Black or African American Population by State', num_buckets=4)  + scale_fill_brewer(palette=8)
mapIndianState <- subset(popAll, RACE =='American Indian and Alaska Native' & SEX =='Total' & ORIGIN =='Total')
mapIndianState <- ddply(mapIndianState, 'STATE', numcolwise(sum))
colnames(mapIndianState) <- c('region', 'value')
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=15)
mapIndianState <- subset(popAll, RACE =='American Indian and Alaska Native' & SEX =='Total' & ORIGIN =='Total')
mapIndianState <- ddply(mapIndianState, 'STATE', numcolwise(sum))
colnames(mapIndianState) <- c('region', 'value')
choroplethr(mapIndianState, "state", title = 'American Indian and Alaska Native Population by State', num_buckets=4)  + scale_fill_brewer(palette=15)
mapAsianState <- subset(popAll, RACE =='Asian' & SEX =='Total' & ORIGIN =='Total')
mapAsianState <- ddply(mapAsianState, 'STATE', numcolwise(sum))
colnames(mapAsianState) <- c('region', 'value')
choroplethr(mapAsianState, "state", title = 'Asian Population by State', num_buckets=4)  + scale_fill_brewer(palette=4)
mapHawaiiState <- subset(popAll, RACE =='Native Hawaiian and Other Pacific Islander' & SEX =='Total' & ORIGIN =='Total')
mapHawaiiState <- ddply(mapHawaiiState, 'STATE', numcolwise(sum))
colnames(mapHawaiiState) <- c('region', 'value')
choroplethr(mapHawaiiState, "state", title = 'Native Hawaiian and Other Pacific Islander Population by State', num_buckets=4)  + scale_fill_brewer(palette=3)
mapHawaiiState <- subset(popAll, RACE =='Native Hawaiian and Other Pacific Islander' & SEX =='Total' & ORIGIN =='Total')
mapHawaiiState <- ddply(mapHawaiiState, 'STATE', numcolwise(sum))
colnames(mapHawaiiState) <- c('region', 'value')
choroplethr(mapHawaiiState, "state", title = 'Native Hawaiian and Other Pacific Islander Population by State', num_buckets=4)  + scale_fill_brewer(palette=3)
mapHispanicState <- subset(popAll, SEX =='Total' & ORIGIN =='Hispanic')
mapHispanicState <- ddply(mapHispanicState, 'STATE', numcolwise(sum))
colnames(mapHispanicState) <- c('region', 'value')
choroplethr(mapHispanicState, "state", title = 'Hispanic Population by State', num_buckets=4) + scale_fill_brewer(palette=18)
maleRatio <- subset(popAll, SEX == 'Male' & ORIGIN == "Total")
maleRatio <- ddply(maleRatio, 'STATE', numcolwise(sum))
for (i in 1:51)
{
maleRatio[i,"POPULATION"] <- round(maleRatio[i,"POPULATION"] / totalPopState[i,"POPULATION"], digits = 3 )
}
colnames(maleRatio) <- c("region", 'value')
choroplethr(maleRatio, "state", title = 'Male Ratio by State')
ageCA <- subset(popAll, STATE =='CA' & SEX =='Total' & ORIGIN =='Total')
ageCA <- ddply(ageCA, 'AGE', numcolwise(sum))
ageCA$POPULATION <- as.numeric(ageCA$POPULATION)
ageCA$AGE <- as.numeric(ageCA$AGE)
ggplot(ageCA, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age in CA") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
ageTX <- subset(popAll, STATE =='TX'& SEX =='Total' & ORIGIN =='Total')
ageTX <- ddply(ageTX, 'AGE', numcolwise(sum))
ageTX$POPULATION <- as.numeric(ageTX$POPULATION)
ageTX$AGE <- as.numeric(ageTX$AGE)
ggplot(ageTX, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age in TX") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
library(ggplot2)
options(java.parameters="-Xmx4g")
library(rJava)
library(RJDBC)
library(scales)
library(maps)
library(ggmap)
library(plyr)
library(choroplethr)
library(RColorBrewer)
library(ggplot2)
options(java.parameters="-Xmx4g")
library(rJava)
library(RJDBC)
library(scales)
library(maps)
library(ggmap)
library(plyr)
library(choroplethr)
library(RColorBrewer)
library(ggplot2)
options(java.parameters="-Xmx4g")
library(rJava)
library(RJDBC)
library(scales)
library(maps)
library(ggmap)
library(plyr)
library(choroplethr)
library(RColorBrewer)
detach("package:choroplethr", unload=TRUE)
library("choroplethr", lib.loc="C:/Program Files/R/R-3.0.3/library")
detach("package:DBI", unload=TRUE)
library("DBI", lib.loc="C:/Program Files/R/R-3.0.3/library")
detach("package:ggmap", unload=TRUE)
library("ggmap", lib.loc="C:/Program Files/R/R-3.0.3/library")
detach("package:ggplot2", unload=TRUE)
library("ggplot2", lib.loc="C:/Program Files/R/R-3.0.3/library")
detach("package:maps", unload=TRUE)
library("maps", lib.loc="C:/Program Files/R/R-3.0.3/library")
detach("package:plyr", unload=TRUE)
library("plyr", lib.loc="C:/Program Files/R/R-3.0.3/library")
detach("package:RColorBrewer", unload=TRUE)
library("RColorBrewer", lib.loc="C:/Program Files/R/R-3.0.3/library")
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="C:/Program Files/R/R-3.0.3/library")
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="C:/Program Files/R/R-3.0.3/library")
detach("package:RJDBC", unload=TRUE)
library("RJDBC", lib.loc="C:/Program Files/R/R-3.0.3/library")
detach("package:scales", unload=TRUE)
library("scales", lib.loc="C:/Program Files/R/R-3.0.3/library")
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_hnp248", "orcl_hnp248"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
#population with state, race, age, sex
popAll <- dbGetQuery(jdbcConnection, "select s.STATE_NAME as State, r.RACE_NAME as Race, o.ORIGIN_NAME as Origin, p.AGE as Age, s2.SEX_NAME as Sex, sum(p.CENSUS2010POP) as Population
from POPULATION p
INNER JOIN STATE s on p.STATE_ID = s.STATE_ID
INNER JOIN RACE r on  p.RACE_ID = r.RACE_ID
INNER JOIN SEX s2 on p.SEX_ID = s2.SEX_ID
INNER JOIN ORIGIN o on p.ORIGIN_ID = o.ORIGIN_ID
group by s.STATE_NAME, r.RACE_NAME, o.ORIGIN_NAME, p.AGE, s2.SEX_NAME
order by s.STATE_NAME, r.RACE_NAME, p.AGE, s2.SEX_NAME asc")
dbDisconnect(jdbcConnection)
}
totalPopState <- subset(popAll, SEX == 'Total'& ORIGIN =='Total')
totalPopState <- ddply(totalPopState, 'STATE', numcolwise(sum))
# state chart
statePop <- totalPopState
statePop$STATE2 <- reorder(statePop$STATE, statePop$POPULATION)
ggplot(statePop, aes(y = POPULATION, x = STATE)) + coord_flip() + ggtitle("Population by State") + scale_y_continuous(labels = comma) + geom_bar(aes(x=STATE2, fill=factor(POPULATION)), color = "black", data = statePop , stat = "identity") + guides(fill=FALSE)
install.packages("choroplethr")
install.packages("DBI")
install.packages("ggmap")
install.packages("rJava")
install.packages("RJDBC")
library("choroplethr", lib.loc="~/R/win-library/3.0")
detach("package:choroplethr", unload=TRUE)
library(ggplot2)
options(java.parameters="-Xmx4g")
library(rJava)
library(DBI)
library(RJDBC)
library(scales)
library(maps)
library(ggmap)
library(plyr)
library(choroplethr)
library(RColorBrewer)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_hnp248", "orcl_hnp248"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
#population with state, race, age, sex
popAll <- dbGetQuery(jdbcConnection, "select s.STATE_NAME as State, r.RACE_NAME as Race, o.ORIGIN_NAME as Origin, p.AGE as Age, s2.SEX_NAME as Sex, sum(p.CENSUS2010POP) as Population
from POPULATION p
INNER JOIN STATE s on p.STATE_ID = s.STATE_ID
INNER JOIN RACE r on  p.RACE_ID = r.RACE_ID
INNER JOIN SEX s2 on p.SEX_ID = s2.SEX_ID
INNER JOIN ORIGIN o on p.ORIGIN_ID = o.ORIGIN_ID
group by s.STATE_NAME, r.RACE_NAME, o.ORIGIN_NAME, p.AGE, s2.SEX_NAME
order by s.STATE_NAME, r.RACE_NAME, p.AGE, s2.SEX_NAME asc")
dbDisconnect(jdbcConnection)
}
# total population by state
totalPopState <- subset(popAll, SEX == 'Total'& ORIGIN =='Total')
totalPopState <- ddply(totalPopState, 'STATE', numcolwise(sum))
# state chart
statePop <- totalPopState
statePop$STATE2 <- reorder(statePop$STATE, statePop$POPULATION)
ggplot(statePop, aes(y = POPULATION, x = STATE)) + coord_flip() + ggtitle("Population by State") + scale_y_continuous(labels = comma) + geom_bar(aes(x=STATE2, fill=factor(POPULATION)), color = "black", data = statePop , stat = "identity") + guides(fill=FALSE)
detach("package:choroplethr", unload=TRUE)
library("choroplethr", lib.loc="~/R/win-library/3.0")
ageCA <- subset(popAll, STATE =='CA' & SEX =='Total' & ORIGIN =='Total')
ageTX <- ddply(ageTX, 'AGE', numcolwise(sum))
ageTX <- subset(popAll, STATE =='TX'& SEX =='Total' & ORIGIN =='Total')
ageTX <- ddply(ageTX, 'AGE', numcolwise(sum))
View(ageCA)
View(ageTX)
age <- subset(popAll, SEX =='Total' & ORIGIN =='Total')
View(age)
age$POPULATION <- as.numeric(age$POPULATION)
age$AGE <- as.numeric(age$AGE)
View(age)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age in TX") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
library(ggplot2)
options(java.parameters="-Xmx4g")
library(rJava)
library(DBI)
library(RJDBC)
library(scales)
library(maps)
library(ggmap)
library(plyr)
library(choroplethr)
library(RColorBrewer)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age in TX") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age in TX") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE) + facet_wrap(~STATE, scales = "free")
View(age)
age <- subset(popAll, SEX =='Total' & ORIGIN =='Total')
age <- ddply(age, 'RACE', numcolwise(sum))
age$POPULATION <- as.numeric(age$POPULATION)
age$AGE <- as.numeric(age$AGE)
age <- subset(popAll, SEX =='Total' & ORIGIN =='Total')
age <- ddply(age, 'RACE', numcolwise(sum))
age$POPULATION <- as.numeric(age$POPULATION)
age$AGE <- as.numeric(age$AGE)
age <- subset(popAll, SEX =='Total' & ORIGIN =='Total')
age <- ddply(age, 'STATE', numcolwise(sum))
age$POPULATION <- as.numeric(age$POPULATION)
age$AGE <- as.numeric(age$AGE)
age <- subset(popAll, SEX =='Total' & ORIGIN =='Total')
age <- ddply(age, 'AGE', numcolwise(sum))
age$POPULATION <- as.numeric(age$POPULATION)
age$AGE <- as.numeric(age$AGE)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE) + facet_wrap(~STATE, scales = "free")
age <- subset(popAll, SEX =='Total' & ORIGIN =='Total')
age <- ddply(age, 'AGE', numcolwise(sum))
age$POPULATION <- as.numeric(age$POPULATION)
age$AGE <- as.numeric(age$AGE)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE) + facet_wrap(~STATE, scales = "free")
age <- subset(popAll, SEX =='Total' & ORIGIN =='Total')
age <- ddply(age, 'AGE', numcolwise(sum))
age$POPULATION <- as.numeric(age$POPULATION)
age$AGE <- as.numeric(age$AGE)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
age <- subset(popAll, SEX =='Total' & ORIGIN =='Total')
age <- ddply(age, 'STATE', numcolwise(sum))
age$POPULATION <- as.numeric(age$POPULATION)
age$AGE <- as.numeric(age$AGE)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
library(ggplot2)
options(java.parameters="-Xmx4g")
library(rJava)
library(DBI)
library(RJDBC)
library(scales)
library(maps)
library(ggmap)
library(plyr)
library(choroplethr)
library(RColorBrewer)
age <- subset(popAll, SEX =='Total' & ORIGIN =='Total')
age <- ddply(age, 'STATE', numcolwise(sum))
age$POPULATION <- as.numeric(age$POPULATION)
age$AGE <- as.numeric(age$AGE)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
#hp lap
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.8.0_20/ojdbc6.jar")
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_hnp248", "orcl_hnp248"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
#population with state, race, age, sex
popAll <- dbGetQuery(jdbcConnection, "select s.STATE_NAME as State, r.RACE_NAME as Race, o.ORIGIN_NAME as Origin, p.AGE as Age, s2.SEX_NAME as Sex, sum(p.CENSUS2010POP) as Population
from POPULATION p
INNER JOIN STATE s on p.STATE_ID = s.STATE_ID
INNER JOIN RACE r on  p.RACE_ID = r.RACE_ID
INNER JOIN SEX s2 on p.SEX_ID = s2.SEX_ID
INNER JOIN ORIGIN o on p.ORIGIN_ID = o.ORIGIN_ID
group by s.STATE_NAME, r.RACE_NAME, o.ORIGIN_NAME, p.AGE, s2.SEX_NAME
order by s.STATE_NAME, r.RACE_NAME, p.AGE, s2.SEX_NAME asc")
dbDisconnect(jdbcConnection)
}
age <- subset(popAll, SEX =='Total' & ORIGIN =='Total')
age <- ddply(age, 'STATE', numcolwise(sum))
age$POPULATION <- as.numeric(age$POPULATION)
age$AGE <- as.numeric(age$AGE)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
age <- subset(popAll, SEX =='Total' & ORIGIN =='Total')
age <- ddply(age, 'AGE', numcolwise(sum))
age$POPULATION <- as.numeric(age$POPULATION)
age$AGE <- as.numeric(age$AGE)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
summary(age$AGE)
summary(age$POPULATION)
rowMeans(age)
View(age)
ggplot(age, aes(x=factor(AGE), y = POPULATION)) + stat_summary(fun.y="mean",geom='bar')
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
mean(age)
colMeans(age)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE) + geom_text(colMeans(age))
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE) + geom_text(size =3,colMeans(age))
meanAge <- colMeans(age)
ggplot(age, aes(x = AGE, y = POPULATION, fill = factor(POPULATION))) + ggtitle("Total Population by Age") + geom_histogram(stat = "identity") + scale_y_continuous(labels = comma) + guides(fill=FALSE) + geom_text(data = meanAge,size =3,colMeans(age))
remove(meanAge)
